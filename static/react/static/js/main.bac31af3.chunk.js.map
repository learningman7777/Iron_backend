{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","calculateWinner","squares","lines","i","length","a","b","c","Board","this","renderSquare","React","Component","Game","state","history","Array","fill","stepNumber","xIsNext","step","setState","slice","concat","console","log","status","current","winner","moves","map","move","desc","jumpTo","handleClick","ReactDOM","render","document","getElementById"],"mappings":"gNAKA,SAASA,EAAOC,GACZ,OACA,wBAAQC,UAAU,SAClBC,QAAS,kBAAMF,EAAME,WADrB,SAEKF,EAAMG,QAKf,SAASC,EAAgBC,GAWrB,IAVA,IAAMC,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEAC,EAAI,EAAGA,EAAID,EAAME,OAAQD,IAAK,CACrC,kBAAkBD,EAAMC,GAAxB,GAAOE,EAAP,KAAUC,EAAV,KAAaC,EAAb,KACA,GAAIN,EAAQI,IAAMJ,EAAQI,KAAOJ,EAAQK,IAAML,EAAQI,KAAOJ,EAAQM,GACpE,OAAON,EAAQI,GAGnB,OAAO,K,IAGHG,E,kKASJ,SAAaL,GAAI,IAAD,OACd,OAAO,cAACR,EAAD,CACLI,MAAOU,KAAKb,MAAMK,QAAQE,GAC1BL,QAAW,kBAAM,EAAKF,MAAME,QAAQK,Q,oBAKxC,WACE,OACE,gCACE,sBAAKN,UAAU,YAAf,UACGY,KAAKC,aAAa,GAClBD,KAAKC,aAAa,GAClBD,KAAKC,aAAa,MAErB,sBAAKb,UAAU,YAAf,UACGY,KAAKC,aAAa,GAClBD,KAAKC,aAAa,GAClBD,KAAKC,aAAa,MAErB,sBAAKb,UAAU,YAAf,UACGY,KAAKC,aAAa,GAClBD,KAAKC,aAAa,GAClBD,KAAKC,aAAa,a,GAjCTC,IAAMC,WAwCpBC,E,kDACJ,WAAYjB,GAAQ,IAAD,8BACjB,cAAMA,IACDkB,MAAQ,CACXC,QAAQ,CAAC,CACPd,QAASe,MAAM,GAAGC,KAAK,QAEzBC,WAAY,EACZC,SAAS,GAPM,E,0CAWnB,SAAOC,GACLX,KAAKY,SAAS,CACZH,WAAYE,EACZD,QAAUC,EAAO,IAAO,M,yBAI5B,SAAYjB,GACV,IAAMY,EAAUN,KAAKK,MAAMC,QAAQO,MAAM,EAAGb,KAAKK,MAAMI,WAAa,GAE9DjB,EADUc,EAAQA,EAAQX,OAAS,GACjBH,QAAQqB,QAE5BtB,EAAgBC,IAAYA,EAAQE,KAIxCF,EAAQE,GAAKM,KAAKK,MAAMK,QAAU,IAAM,IACxCV,KAAKY,SAAS,CACVN,QAASA,EAAQQ,OAAO,CAAC,CAACtB,QAASA,KACnCkB,SAAUV,KAAKK,MAAMK,QACrBD,WAAYH,EAAQX,Y,oBAI1B,WAAU,IAAD,OACDW,EAAUN,KAAKK,MAAMC,QAC3BS,QAAQC,IAAIV,GACZS,QAAQC,IAAIhB,KAAKK,MAAMI,YACvB,IAcIQ,EAdEC,EAAUZ,EAAQN,KAAKK,MAAMI,YAC7BU,EAAS5B,EAAgB2B,EAAQ1B,SAEjC4B,EAAQd,EAAQe,KAAI,SAACV,EAAMW,GAC/B,IAAMC,EAAOD,EACb,eAAiBA,EACjB,mBACA,OACE,6BACE,wBAAQjC,QAAS,kBAAM,EAAKmC,OAAOF,IAAnC,SAA2CC,KADpCD,MAcb,OANEL,EADEE,EACO,WAAaA,EAGb,iBAAmBnB,KAAKK,MAAMK,QAAU,IAAK,KAItD,sBAAKtB,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,cAACW,EAAD,CACEP,QAAS0B,EAAQ1B,QACjBH,QAAS,SAACK,GAAD,OAAO,EAAK+B,YAAY/B,QAGrC,sBAAKN,UAAU,YAAf,UACE,8BAAM6B,IACN,6BAAKG,c,GAxEIlB,IAAMC,WAiFzBuB,IAASC,OACP,cAACvB,EAAD,IACAwB,SAASC,eAAe,W","file":"static/js/main.bac31af3.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\n\r\nfunction Square(props) {\r\n    return (\r\n    <button className=\"square\" \r\n    onClick={() => props.onClick() }>\r\n        {props.value}\r\n    </button>\r\n    );\r\n}\r\n  \r\nfunction calculateWinner(squares) {\r\n    const lines = [\r\n      [0, 1, 2],\r\n      [3, 4, 5],\r\n      [6, 7, 8],\r\n      [0, 3, 6],\r\n      [1, 4, 7],\r\n      [2, 5, 8],\r\n      [0, 4, 8],\r\n      [2, 4, 6],\r\n    ];\r\n    for (let i = 0; i < lines.length; i++) {\r\n      const [a, b, c] = lines[i];\r\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n        return squares[a];\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  class Board extends React.Component {\r\n    // constructor(props) {\r\n    //     super(props);\r\n    //     this.state = {\r\n    //         squares: Array(9).fill(null),\r\n    //         xIsNext: true,\r\n    //     };\r\n    // }    \r\n\r\n    renderSquare(i) {\r\n      return <Square \r\n        value={this.props.squares[i]}\r\n        onClick= { () => this.props.onClick(i)}\r\n      />;\r\n    }\r\n  \r\n    \r\n    render() {\r\n      return (\r\n        <div>\r\n          <div className=\"board-row\">\r\n            {this.renderSquare(0)}\r\n            {this.renderSquare(1)}\r\n            {this.renderSquare(2)}\r\n          </div>\r\n          <div className=\"board-row\">\r\n            {this.renderSquare(3)}\r\n            {this.renderSquare(4)}\r\n            {this.renderSquare(5)}\r\n          </div>\r\n          <div className=\"board-row\">\r\n            {this.renderSquare(6)}\r\n            {this.renderSquare(7)}\r\n            {this.renderSquare(8)}\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  class Game extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        history:[{\r\n          squares: Array(9).fill(null),\r\n        }],\r\n        stepNumber: 0,\r\n        xIsNext: true\r\n      }\r\n    }\r\n\r\n    jumpTo(step) {\r\n      this.setState({\r\n        stepNumber: step,\r\n        xIsNext: (step % 2) === 0,\r\n      });\r\n    }\r\n\r\n    handleClick(i){\r\n      const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n      const current = history[history.length - 1];\r\n      const squares = current.squares.slice();\r\n\r\n      if (calculateWinner(squares) || squares[i]){\r\n        return;\r\n      }\r\n\r\n      squares[i] = this.state.xIsNext ? 'X' : 'O';\r\n      this.setState({\r\n          history: history.concat([{squares: squares}]),\r\n          xIsNext: !this.state.xIsNext,\r\n          stepNumber: history.length\r\n      });\r\n    }\r\n\r\n    render() {\r\n      const history = this.state.history;\r\n      console.log(history)\r\n      console.log(this.state.stepNumber)\r\n      const current = history[this.state.stepNumber];\r\n      const winner = calculateWinner(current.squares);\r\n\r\n      const moves = history.map((step, move) => {\r\n        const desc = move ?\r\n        'Go to move #' + move :\r\n        'Go to game start';\r\n        return (\r\n          <li key={move}>\r\n            <button onClick={() => this.jumpTo(move)}>{desc}</button>\r\n          </li>\r\n        );\r\n      });\r\n\r\n      let status;\r\n      if (winner){\r\n        status = 'Winner: ' + winner;\r\n      }\r\n      else{\r\n        status = 'Next player: ' + (this.state.xIsNext ? 'X': 'O');\r\n      } \r\n\r\n      return (\r\n        <div className=\"game\">\r\n          <div className=\"game-board\">\r\n            <Board \r\n              squares={current.squares}\r\n              onClick={(i) => this.handleClick(i)} \r\n            />\r\n          </div>\r\n          <div className=\"game-info\">\r\n            <div>{status}</div>\r\n            <ol>{moves}</ol>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  // ========================================\r\n  \r\n  ReactDOM.render(\r\n    <Game />,\r\n    document.getElementById('root')\r\n  );\r\n  "],"sourceRoot":""}